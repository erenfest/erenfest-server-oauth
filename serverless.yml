app: erenfest-server-oauth
service: erenfest-server-oauth

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage}
  region: ap-east-2
  memorySize: ${self:custom.MEMORY_SIZE.${opt:stage, 'example'}}
  environment: ${file(.env.${opt:stage, 'example'}.yaml)}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem

plugins:
  - serverless-plugin-typescript

custom:
  serverless-offline:
    port: ${self:custom.PORT.${opt:stage}}
  PORT:
    local: 3002
    development: 3002
    production: 3002
  MEMORY_SIZE:
    local: 128
    development: 128
    production: 1024

functions:
  versioning:
    handler: src/handlers/index.versioning
    events:
      - http:
        method: GET
        path: /versioning

  authorize:
    handler: src/handlers/index.authorize

  onConnect:
    handler: src/handlers/index.onConnect
    events:
      - websocket:
        route: $connect
        auth: authorize

  onDisconnect:
    handler: src/handlers/index.onDisconnect
    events:
      - websocket:
        route: $disconnect

  root:
    handler: src/handlers/index.root
    events:
      - websocket:
        route: message

resources:
  Resources:
    ChatTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: connectionId
            AttributeType: S
        KeySchema:
          - AttributeName: connectionId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
